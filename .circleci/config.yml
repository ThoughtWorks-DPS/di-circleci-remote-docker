---
version: 2.1

orbs:
  executor-tools: feedyard/executor-tools@2.1.0

on-push-master: &on-push-master
  branches:
    only: /master/
  tags:
    ignore: /.*/

on-tag-master: &on-tag-master
  branches:
    ignore: /.*/
  tags:
    only: /.*/

workflows:
  version: 2
  di-circleci-remote-docker-image-pipeline:
    jobs:
      - executor-tools/dev-release:
          shell: secrethub run -- /bin/sh -eo pipefail
          name: "dev-build"
          context: twdps-di
          image: twdps/di-circleci-remote-docker
          tag: edge
          docker-cve-scan: true
          snyk-organization: twdps
          cis-docker-image-scan: true
          bats-test: true
          entry-point: /bin/ash
          container-name: di-circleci-remote-docker-edge
          filters: *on-push-master
          
      - executor-tools/publish:
          shell: secrethub run -- /bin/sh -eo pipefail
          name: Release
          context: twdps-di
          pull-tag: edge
          image: twdps/di-circleci-remote-docker
          release-tag: stable
          filters: *on-tag-master        

  # NOTE: currently circleci does not support scheduled builds that use restricted contexts
  # builds nightly from .unpinned Dockerfile in order to test the latest base image and installed packages
  di-circleci-infra-image-nightly-build:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - executor-tools/dev-release:
          shell: secrethub run -- /bin/sh -eo pipefail
          name: "nightly-build"
          context: twdps-di
          image: twdps/di-circleci-remote-docker
          tag: nightly
          dockerfile: Dockerfile.unpinned
          docker-cve-scan: true
          snyk-organization: twdps
          cis-docker-image-scan: true
          bats-test: true
          container-name: di-circleci-remote-docker-edge




# ---
# version: 2.1

# orbs:
#   docker: circleci/docker@1.0.1

# # yaml anchor filters
# on-push-master: &on-push-master
#   branches:
#     only: /master/
#   tags:
#     ignore: /.*/

# on-tag-master: &on-tag-master
#   branches:
#     ignore: /.*/
#   tags:
#     only: /.*/


# workflows:
#   di-circleci-remote-docker-image-pipeline:
#     jobs:
#       - docker/hadolint:
#           filters: *on-push-master
#       - docker/publish:
#           name: test-build
#           context: twdps-di
#           deploy: true
#           image: twdps/di-circleci-remote-docker
#           lint-dockerfile: true
#           tag: edge
#           requires:
#             - docker/hadolint
#           filters: *on-push-master
#           after_build:
#             - run:
#                 name: scan for known vulnerabilities (cve)
#                 command: |
#                   docker run -it \
#                              -v /var/run/docker.sock:/var/run/docker.sock \
#                              -e "SNYK_TOKEN=$SNYK_TOKEN" \
#                              -v "${PWD}:/project" \
#                              snyk/snyk-cli:1.320.0-docker test \
#                              --org=twdps \
#                              --severity-threshold=low \
#                              --docker twdps/di-circleci-remote-docker:edge \
#                              --file=Dockerfile
#             - run:
#                 name: CIS Docker Benchmark tests
#                 command: |
#                   CID=$(docker run --name di-circleci-remote-docker-edge \
#                                    -it -d --entrypoint "/bin/ash" \
#                                    "twdps/di-circleci-remote-docker:edge")
#                   docker run -it \
#                              -v /var/run/docker.sock:/var/run/docker.sock \
#                              -e IMAGE_NAME="di-circleci-remote-docker" \
#                              -e IMAGE_TAG="edge" \
#                              -e CONTAINER_USER="circleci" \
#                              -e CID="$CID" \
#                              "feedyard/docker-benchmark"
#                   docker run -it --rm \
#                             -v /var/run/docker.sock:/var/run/docker.sock \
#                             -e CHEF_LICENSE="accept" \
#                             -v "$(pwd)":/share \
#                             chef/inspec exec profiles/circleci-remote-docker \
#                             -t docker://"${CID}"
#       - docker/publish:
#           name: release
#           context: twdps-di
#           image: twdps/di-circleci-remote-docker
#           tag: '$CIRCLE_TAG,stable'
#           filters: *on-tag-master
